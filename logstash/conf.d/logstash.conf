input {  
  tcp {  
        port => 4567
        #模式选择为server  
        mode => "server"  
        tags => ["tags"] 
        #message格式化json输入，可以解决中文乱码问题 
        # codec => json_lines 
      }  
  file{
      path=>[
          "/weblogs/hyerf/runtime/logs/error_*.log"
      ]
      type => "hyperf_error"
      start_position => "beginning"
  }
}  

filter {  
    json{
        source => "message"
    }
  # ruby {
  #       init => "@kname = ['server_addr','domain','remote_addr','http_x_forwarded_for','time_local','request_uri','request_length','bytes_sent','request_time','status','upstream_addr','upstream_cache_status','upstream_response_time','request_method','http_user_agent','upstream_status','key']"
  #       code => "event.append(Hash[@kname.zip(event['message'].split('`'))])"
  #  }
  #  #将api接口拆开
  #  if [request_uri] {
  #        grok {
  #          match => ["request_uri","%{DATA:api}(\?%{DATA:args})?$"]
  #       }
  #  }
  #  #用日志时间建立索引，把无用字段去掉
  #  date {
  #         match => ["time_local", "dd/MMM/yyyy:HH:mm:ss Z"]
  #         target => "@timestamp"
  #         remove_field => ["time_local","message","path","offset","prospector","[fields][ttopic]","[beat][version]","[beat][name]"]
  #     }
  #  #把类型从字符型转为数字型
  #  mutate {
  #       convert => [
  #            "request_length" , "integer",
  #            "status" , "integer",
  #            "upstream_response_time" , "float",
  #            "request_time" , "float",
  #            "bytes_sent" , "integer" ]
  #   }

}  

output { 
  #  elasticsearch {
  #   hosts => ["elasticsearch:9200"]
  #   index => "log-%{+YYYY.MM.dd}"
  #   user => "elastic"
  #   password => "changeme"
  # }
  if [type] == "nginx" {

      elasticsearch {
          hosts => ["elasticsearch:9200"]
          index => "access_nginx-%{+YYYY.MM.dd}"
          user => "elastic"
          password => "changeme"
      }
  }

}
